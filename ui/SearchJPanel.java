/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import Model.Car;
import Model.ServiceRecords;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 85251
 */
public class SearchJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SearchJPanel
     */
    ServiceRecords records;
    String date = "";
    
    public SearchJPanel(ServiceRecords records) {
        initComponents();
        this.records = records;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblAll = new javax.swing.JTable();
        btn1Available = new javax.swing.JButton();
        btnNumberA = new javax.swing.JButton();
        btnBrand = new javax.swing.JButton();
        txtBrand = new javax.swing.JTextField();
        lblBrand = new javax.swing.JLabel();
        txtNumberA = new javax.swing.JTextField();
        lblMY = new javax.swing.JLabel();
        txtMY = new javax.swing.JTextField();
        btnMY = new javax.swing.JButton();
        lblSn = new javax.swing.JLabel();
        txtSnMin = new javax.swing.JTextField();
        txtSnMax = new javax.swing.JTextField();
        btnSn = new javax.swing.JButton();
        lblSnMin = new javax.swing.JLabel();
        lblSnMax = new javax.swing.JLabel();
        lblId = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        btnId = new javax.swing.JButton();
        lblModel = new javax.swing.JLabel();
        txtModel = new javax.swing.JTextField();
        btnModel = new javax.swing.JButton();
        lblCity = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        btnCity = new javax.swing.JButton();
        btnCert = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnMu = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblMu = new javax.swing.JTable();
        btnTm = new javax.swing.JButton();
        txtTm = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtId1 = new javax.swing.JTextField();
        txtModel1 = new javax.swing.JTextField();
        txtBrand1 = new javax.swing.JTextField();
        txtMY1 = new javax.swing.JTextField();
        txtSeats1 = new javax.swing.JTextField();
        txtCert1 = new javax.swing.JTextField();
        btnView = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtAva1 = new javax.swing.JTextField();
        txtCity1 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(1001, 627));

        tblAll.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Brand", "Model", "Manufactured Year", "Seats", "City", "Certificated", "Available"
            }
        ));
        jScrollPane1.setViewportView(tblAll);

        btn1Available.setText("First available car");
        btn1Available.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1AvailableActionPerformed(evt);
            }
        });

        btnNumberA.setText("The number of cars available");
        btnNumberA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNumberAActionPerformed(evt);
            }
        });

        btnBrand.setText("Search");
        btnBrand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrandActionPerformed(evt);
            }
        });

        lblBrand.setText("Search by Brand:");

        txtNumberA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumberAActionPerformed(evt);
            }
        });

        lblMY.setText("Search by Manufactured year:");

        btnMY.setText("Search");
        btnMY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMYActionPerformed(evt);
            }
        });

        lblSn.setText("Search by Seats number:");

        btnSn.setText("Search");
        btnSn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSnActionPerformed(evt);
            }
        });

        lblSnMin.setText("min:");

        lblSnMax.setText("max:");

        lblId.setText("Search by Id:");

        btnId.setText("Search");
        btnId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIdActionPerformed(evt);
            }
        });

        lblModel.setText("Search by Model:");

        btnModel.setText("Search");
        btnModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModelActionPerformed(evt);
            }
        });

        lblCity.setText("Search available cars by city:");

        btnCity.setText("Search");
        btnCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCityActionPerformed(evt);
            }
        });

        btnCert.setText("Expired certificates car");
        btnCert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCertActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnMu.setText("Manufactures used");
        btnMu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMuActionPerformed(evt);
            }
        });

        tblMu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Manufactures"
            }
        ));
        jScrollPane2.setViewportView(tblMu);

        btnTm.setText("Last time updated");
        btnTm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTmActionPerformed(evt);
            }
        });

        jLabel1.setText("Id:");

        jLabel2.setText("Brand:");

        jLabel3.setText("Model:");

        jLabel4.setText("Manufactured Years:");

        jLabel5.setText("Seats:");

        jLabel6.setText("City:");

        jLabel7.setText("Certificate:");

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        jLabel8.setText("Available:");

        jLabel9.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Search Cars");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblMY)
                                .addGap(18, 18, 18)
                                .addComponent(txtMY, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnMY, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(148, 148, 148))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblCity)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblSn)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblSnMin)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtSnMin, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblSnMax)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtSnMax, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnSn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnCity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(147, 147, 147))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblModel)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtModel, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnModel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblBrand)
                                            .addComponent(lblId))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(txtBrand, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnBrand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                                .addGap(235, 235, 235)))
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn1Available)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnNumberA)
                                .addGap(18, 18, 18)
                                .addComponent(txtNumberA, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnCert)
                            .addComponent(btnMu)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12))
                    .addComponent(jScrollPane1))
                .addGap(65, 65, 65))
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(33, 33, 33)
                        .addComponent(txtId1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtBrand1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtModel1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtSeats1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(83, 83, 83)
                        .addComponent(txtAva1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(69, 69, 69)
                        .addComponent(txtCert1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(txtMY1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtCity1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(89, 89, 89)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnView, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnTm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtTm))
                .addGap(91, 91, 91))
            .addGroup(layout.createSequentialGroup()
                .addGap(395, 395, 395)
                .addComponent(jLabel9)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel9)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnId)
                            .addComponent(lblId))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblBrand)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtBrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnBrand)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblModel)
                            .addComponent(txtModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnModel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnMY)
                            .addComponent(txtMY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMY))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCity)
                            .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCity))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSn)
                            .addComponent(txtSnMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSnMax)
                            .addComponent(lblSnMin)
                            .addComponent(lblSn)
                            .addComponent(txtSnMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn1Available)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNumberA)
                            .addComponent(txtNumberA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCert)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMu)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtModel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtSeats1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtId1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(txtMY1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTm))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtBrand1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(txtCity1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnView)
                            .addComponent(txtTm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCert1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtAva1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn1AvailableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1AvailableActionPerformed
        // TODO add your handling code here:
        int i = 0;
        int length = records.getRecords().size();
        ServiceRecords tmprecords = new ServiceRecords();
        while(i<length){
            if(records.getRecords().get(i).isAvailability()){
                tmprecords.addNewCar(records.getRecords().get(i));
                break;
            }
            i++;
        }
        populateTable(tmprecords);
    }//GEN-LAST:event_btn1AvailableActionPerformed

    private void btnNumberAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNumberAActionPerformed
        // TODO add your handling code here:
        int i = 0;
        int j = 0;
        int length = records.getRecords().size();
        ServiceRecords tmprecords = new ServiceRecords();
        while(i<length){
            if(records.getRecords().get(i).isAvailability()){
                j++;
            }
            i++;
        }
        txtNumberA.setText(String.valueOf(j));
    }//GEN-LAST:event_btnNumberAActionPerformed

    private void txtNumberAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumberAActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtNumberAActionPerformed

    private void btnBrandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrandActionPerformed
        if(txtBrand.getText().isEmpty()){
            JOptionPane.showMessageDialog(this,"You must input Brand.");
            return;
        }
        String brand = txtBrand.getText();
        int i = 0;
        int length = records.getRecords().size();
        ServiceRecords tmprecords = new ServiceRecords();
        while(i<length){
            if(records.getRecords().get(i).getBrand().equals(brand)){
                tmprecords.addNewCar(records.getRecords().get(i));
            }
            i++;
        }
        populateTable(tmprecords);
//        txtBrand.setText("");
    }//GEN-LAST:event_btnBrandActionPerformed

    private void btnMYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMYActionPerformed
        if(txtMY.getText().isEmpty()){
            JOptionPane.showMessageDialog(this,"You must input Manufactured year.");
            return;
        }
        int my = Integer.parseInt(txtMY.getText());
        int i = 0;
        int length = records.getRecords().size();
        ServiceRecords tmprecords = new ServiceRecords();
        while(i<length){
            if(records.getRecords().get(i).getYear()==my){
                tmprecords.addNewCar(records.getRecords().get(i));
            }
            i++;
        }
        populateTable(tmprecords);
    }//GEN-LAST:event_btnMYActionPerformed

    private void btnSnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSnActionPerformed
        if(txtSnMin.getText().isEmpty() || txtSnMax.getText().isEmpty()){
            JOptionPane.showMessageDialog(this,"You must input Min seats number and Max seats number both.");
            return;
        }
        int min = Integer.parseInt(txtSnMin.getText());
        int max = Integer.parseInt(txtSnMax.getText());
        int i = 0;
        int length = records.getRecords().size();
        ServiceRecords tmprecords = new ServiceRecords();
        while(i<length){
            
            int seatsNumber = records.getRecords().get(i).getSeatsNumber();
            if(seatsNumber<=max && seatsNumber>=min){
                tmprecords.addNewCar(records.getRecords().get(i));
            }
            i++;
        }
        populateTable(tmprecords);
    }//GEN-LAST:event_btnSnActionPerformed

    private void btnIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIdActionPerformed
        if(txtId.getText().isEmpty()){
            JOptionPane.showMessageDialog(this,"You must input Id.");
            return;
        }
        String id = txtId.getText();
        int i = 0;
        int length = records.getRecords().size();
        ServiceRecords tmprecords = new ServiceRecords();
        while(i<length){
            if(records.getRecords().get(i).getId().equals(id)){
                tmprecords.addNewCar(records.getRecords().get(i));
            }
            i++;
        }
        populateTable(tmprecords);
    }//GEN-LAST:event_btnIdActionPerformed

    private void btnModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModelActionPerformed
        if(txtModel.getText().isEmpty()){
            JOptionPane.showMessageDialog(this,"You must input Model.");
            return;
        }
        String model = txtModel.getText();
        int i = 0;
        int length = records.getRecords().size();
        ServiceRecords tmprecords = new ServiceRecords();
        while(i<length){
            if(records.getRecords().get(i).getModel().equals(model)){
                tmprecords.addNewCar(records.getRecords().get(i));
            }
            i++;
        }
        populateTable(tmprecords);
    }//GEN-LAST:event_btnModelActionPerformed

    private void btnCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCityActionPerformed
        if(txtCity.getText().isEmpty()){
            JOptionPane.showMessageDialog(this,"You must input City.");
            return;
        }
        String city = txtCity.getText();
        int i = 0;
        int length = records.getRecords().size();
        ServiceRecords tmprecords = new ServiceRecords();
        while(i<length){
            if(records.getRecords().get(i).getCity().equals(city)){
                tmprecords.addNewCar(records.getRecords().get(i));
            }
            i++;
        }
        populateTable(tmprecords);
    }//GEN-LAST:event_btnCityActionPerformed

    private void btnCertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCertActionPerformed
        int i = 0;
        int length = records.getRecords().size();
        ServiceRecords tmprecords = new ServiceRecords();
        while(i<length){
            if(!records.getRecords().get(i).isCertificate()){
                tmprecords.addNewCar(records.getRecords().get(i));
            }
            i++;
        }
        populateTable(tmprecords);
    }//GEN-LAST:event_btnCertActionPerformed

    private void btnMuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMuActionPerformed
        ArrayList<String> mu = new ArrayList<String>();
        int length = records.getRecords().size();
        for(int i = 0; i < length; i++){
            String sub = records.getRecords().get(i).getBrand();
            if(!mu.contains(sub))
                mu.add(sub);
        }
        populateTableMu(mu);
    }//GEN-LAST:event_btnMuActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        int selectedRowIndex = tblAll.getSelectedRow();
        
        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this,"Please select a row to view, then to modify.");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblAll.getModel();
        Car selectedCars = (Car) model.getValueAt(selectedRowIndex, 0);
        
        Boolean Id = txtId1.getText().equals(selectedCars.getId());
        Boolean Brand = txtBrand1.getText().equals(selectedCars.getBrand());
        Boolean Model = txtModel1.getText().equals(selectedCars.getModel());
        Boolean City = txtCity1.getText().equals(selectedCars.getCity());
        Boolean MY = txtMY1.getText().equals(String.valueOf(selectedCars.getYear()));
        Boolean Seats = txtSeats1.getText().equals(String.valueOf(selectedCars.getSeatsNumber()));
        Boolean Cert = txtCert1.getText().equals(String.valueOf(selectedCars.isCertificate()));
        Boolean Ava = txtAva1.getText().equals(String.valueOf(selectedCars.isAvailability()));
        
        if(!Id){
            JOptionPane.showMessageDialog(this,"Id cannot be changed!");
            return;
        }
        
        if(!Brand){
            if(!Pattern.matches("\\w+",txtBrand1.getText())){
                JOptionPane.showMessageDialog(this, "Brand must be entered.");
                return;
            }
            selectedCars.setBrand(txtBrand1.getText());
        }

        if(!Model){
            if(!Pattern.matches("\\w+",txtModel1.getText())){
                JOptionPane.showMessageDialog(this, "Model must be entered.");
                return;
            }
            selectedCars.setModel(txtModel1.getText());
        }
            

        if(!City){
            if(!Pattern.matches("[a-zA-Z]+",txtCity1.getText())){
                JOptionPane.showMessageDialog(this, "City must be entered.");
                return;
            }
            selectedCars.setCity(txtCity1.getText());
        }


        if(!MY){
            if(!Pattern.matches("\\d{4}",txtMY1.getText())){
                JOptionPane.showMessageDialog(this, "Manufactured Year must be entered.");
                return;
            }
            selectedCars.setYear(Integer.parseInt(txtMY1.getText()));
        }

        if(!Seats){
            if(!Pattern.matches("\\d{1,2}",txtSeats1.getText())){
                JOptionPane.showMessageDialog(this, "Seats must be entered.");
                return;
            }
            selectedCars.setSeatsNumber(Integer.parseInt(txtSeats1.getText()));
        }
        
        if(!Cert){
            System.out.println(txtCert1.getText());
            System.out.println(txtCert1.getText().equals("true"));
            System.out.println(txtCert1.getText().equals("false"));
            if(!(txtCert1.getText().equals("true")||txtCert1.getText().equals("false"))){
                JOptionPane.showMessageDialog(this, "Certificate status must be entered in 'false' or 'true'.");
                return;
            }
            selectedCars.setCertificate(Boolean.parseBoolean(txtCert1.getText()));
        }

        if(!Ava){
            if(!(txtAva1.getText().equals("true")||txtAva1.getText().equals("false"))){
                JOptionPane.showMessageDialog(this, "Available status must be entered in 'false' or 'true'.");
                return;
            }
            selectedCars.setAvailability(Boolean.parseBoolean(txtAva1.getText()));
        }

        if(Brand && Model && City && MY && Seats && Cert && Ava){
            JOptionPane.showMessageDialog(this,"Nothing changed!");
            return;
        }
            
        JOptionPane.showMessageDialog(this,"Update sucess!");
        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        String date = df.format(new Date());
        this.date = date;
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        int selectedRowIndex = tblAll.getSelectedRow();
        
        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this,"Please select a row to view.");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblAll.getModel();
        Car selectedCars = (Car) model.getValueAt(selectedRowIndex, 0);
        
        txtId1.setText(String.valueOf(selectedCars.getId()));
        txtBrand1.setText(String.valueOf(selectedCars.getBrand()));
        txtModel1.setText(String.valueOf(selectedCars.getModel()));
        txtMY1.setText(String.valueOf(selectedCars.getYear()));
        txtSeats1.setText(String.valueOf(selectedCars.getSeatsNumber()));
        txtCert1.setText(String.valueOf(selectedCars.isCertificate()));
        txtCity1.setText(String.valueOf(selectedCars.getCity()));
        txtAva1.setText(String.valueOf(selectedCars.isAvailability()));
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnTmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTmActionPerformed
        if(this.date.isEmpty()){
            JOptionPane.showMessageDialog(this,"Nothing updated yet.");
            return;
        }
        txtTm.setText(date);
    }//GEN-LAST:event_btnTmActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn1Available;
    private javax.swing.JButton btnBrand;
    private javax.swing.JButton btnCert;
    private javax.swing.JButton btnCity;
    private javax.swing.JButton btnId;
    private javax.swing.JButton btnMY;
    private javax.swing.JButton btnModel;
    private javax.swing.JButton btnMu;
    private javax.swing.JButton btnNumberA;
    private javax.swing.JButton btnSn;
    private javax.swing.JButton btnTm;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblBrand;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblMY;
    private javax.swing.JLabel lblModel;
    private javax.swing.JLabel lblSn;
    private javax.swing.JLabel lblSnMax;
    private javax.swing.JLabel lblSnMin;
    private javax.swing.JTable tblAll;
    private javax.swing.JTable tblMu;
    private javax.swing.JTextField txtAva1;
    private javax.swing.JTextField txtBrand;
    private javax.swing.JTextField txtBrand1;
    private javax.swing.JTextField txtCert1;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCity1;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtId1;
    private javax.swing.JTextField txtMY;
    private javax.swing.JTextField txtMY1;
    private javax.swing.JTextField txtModel;
    private javax.swing.JTextField txtModel1;
    private javax.swing.JTextField txtNumberA;
    private javax.swing.JTextField txtSeats1;
    private javax.swing.JTextField txtSnMax;
    private javax.swing.JTextField txtSnMin;
    private javax.swing.JTextField txtTm;
    // End of variables declaration//GEN-END:variables

    private void populateTable(ServiceRecords tmprecords) {
        DefaultTableModel model = (DefaultTableModel) tblAll.getModel();
        model.setRowCount(0);
        
        
        for(Car car: tmprecords.getRecords()){
            Object[] row = new Object[8];
            row[0] = car;
            row[1] = car.getBrand();
            row[2] = car.getModel();
            row[3] = car.getYear();
            row[4] = car.getSeatsNumber();
            row[5] = car.getCity();
            row[6] = car.isCertificate();
            row[7] = car.isAvailability();
            
            model.addRow(row);
        }
    }
    private void populateTableMu(ArrayList<String> mu) {
        DefaultTableModel model = (DefaultTableModel) tblMu.getModel();
        model.setRowCount(0);     
        for(String sub: mu){
            Object[] row = new Object[1];
            row[0] = sub;
            model.addRow(row);
        }
    }
}

//最后更新时间
//config多加样例